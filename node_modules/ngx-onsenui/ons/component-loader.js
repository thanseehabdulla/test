import { Injectable, ApplicationRef } from '@angular/core';
var ComponentLoader = (function () {
    function ComponentLoader(appRef) {
        this.appRef = appRef;
    }
    // Load an instance of ComponentRef in app view.
    ComponentLoader.prototype.load = function (componentRef) {
        var _this = this;
        var rootElement = componentRef.location.nativeElement;
        if (this.appRef.attachView) {
            this.appRef.attachView(componentRef.hostView);
            componentRef.onDestroy(function () {
                _this.appRef.detachView(componentRef.hostView);
                if (rootElement.parentNode) {
                    rootElement.parentNode.removeChild(rootElement);
                }
            });
        }
        else {
            if (this.appRef.registerChangeDetector) {
                this.appRef.registerChangeDetector(componentRef.changeDetectorRef);
            }
            componentRef.onDestroy(function () {
                if (_this.appRef.unregisterChangeDetector) {
                    _this.appRef.unregisterChangeDetector(componentRef.changeDetectorRef);
                }
                if (rootElement.parentNode) {
                    rootElement.parentNode.removeChild(rootElement);
                }
            });
        }
        var rootContainer = this.appRef._rootComponents[0].location.nativeElement;
        rootContainer.appendChild(rootElement);
    };
    return ComponentLoader;
}());
export { ComponentLoader };
ComponentLoader.decorators = [
    { type: Injectable },
];
/** @nocollapse */
ComponentLoader.ctorParameters = function () { return [
    { type: ApplicationRef, },
]; };
//# sourceMappingURL=component-loader.js.map