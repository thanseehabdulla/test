import { Injector, ComponentFactoryResolver, Injectable, ApplicationRef, ReflectiveInjector, NgZone } from '@angular/core';
import { Params } from './params';
import { ComponentLoader } from './component-loader';
/**
 * @object ModalFactory
 */
var ModalFactory = (function () {
    function ModalFactory(_injector, _resolver, _appRef, _componentLoader, _zone) {
        this._injector = _injector;
        this._resolver = _resolver;
        this._appRef = _appRef;
        this._componentLoader = _componentLoader;
        this._zone = _zone;
    }
    ModalFactory.prototype.createModal = function (componentType, params) {
        var _this = this;
        if (params === void 0) { params = {}; }
        console.warn('[ngx-onsenui] ModalFactory is deprecated since 4.0.0-rc.0. Place <ons-modal> into your component instead.');
        return new Promise(function (resolve) {
            setImmediate(function () {
                _this._zone.run(function () {
                    var factory = _this._resolver.resolveComponentFactory(componentType);
                    var injector = ReflectiveInjector.resolveAndCreate([
                        { provide: Params, useValue: new Params(params) }
                    ], _this._injector);
                    var componentRef = factory.create(injector);
                    var rootElement = componentRef.location.nativeElement;
                    _this._componentLoader.load(componentRef);
                    var element = rootElement.children[0];
                    var modalElement = element.tagName === 'ONS-MODAL' ? element : element.querySelector('ons-modal');
                    if (!modalElement) {
                        throw Error('<ons-modal> element is not found in component\'s template.');
                    }
                    resolve({ modal: modalElement, destroy: function () { return componentRef.destroy(); } });
                });
            });
        });
    };
    return ModalFactory;
}());
export { ModalFactory };
ModalFactory.decorators = [
    { type: Injectable },
];
/** @nocollapse */
ModalFactory.ctorParameters = function () { return [
    { type: Injector, },
    { type: ComponentFactoryResolver, },
    { type: ApplicationRef, },
    { type: ComponentLoader, },
    { type: NgZone, },
]; };
//# sourceMappingURL=modal-factory.js.map